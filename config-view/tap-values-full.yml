#@ load("@ytt:data", "data")
#@ load("@ytt:yaml", "yaml")

---
#@ def config():
profile: view
ceip_policy_disclosed: true
buildservice:
  kp_default_repository: #@ "{}/{}".format(data.values.tap.registry.host, data.values.tap.registry.repositories.buildService)
  kp_default_repository_username: #@ data.values.tap.credentials.registry.username
  kp_default_repository_password: #@ data.values.tap.credentials.registry.password
  tanzunet_username: #@ data.values.tap.credentials.tanzuNet.username
  tanzunet_password: #@ data.values.tap.credentials.tanzuNet.password
  descriptor_name: "tap-1.0.0-full"
  enable_automatic_dependency_updates: true

supply_chain: basic
ootb_supply_chain_basic:
  registry:
    server: #@ data.values.tap.registry.host
    repository: #@ data.values.tap.registry.repositories.ootbSupplyChain
  gitops:
    ssh_secret: ""

learningcenter:
  ingressDomain: #@ data.values.tap.domains.learningCenter
  ingressSecret:
    secretName: tls
    server:
      service_type: ClusterIP

tap_gui:
  service_type: ClusterIP
  ingressEnabled: "true"
  ingressDomain: #@ data.values.tap.domains.main
  tls:
    namespace: tanzu-system-ingress
    secretName: tls
  app_config:
    app:
      baseUrl: #@ "https://{}".format(data.values.tap.domains.tapGui)
    integrations:
      #@ if "github" in data.values.tap.credentials and "token" in data.values.tap.credentials.github:
      github:
      - host: github.com
        token: #@ data.values.tap.credentials.github.token
      #@ end
    catalog:
      locations:
      #@ for catalog in data.values.tap.catalogs:
      - type: url
        target: #@ catalog
      #@ end
    supplyChain:
      enablePlugin: true
    backend:
      baseUrl: #@ "https://{}".format(data.values.tap.domains.tapGui)
      reading:
        allow:
          - host: swagger.io
          - host: '*.tap.tanzu4u.net'
      cors:
        origin: #@ "https://{}".format(data.values.tap.domains.tapGui)
      #@ if "backstage" in data.values.tap.credentials and "database" in data.values.tap.credentials.backstage:
      backend:
        database:
          client: #@ data.values.tap.credentials.backstage.database.client
          connection:
            host: #@ data.values.tap.credentials.backstage.database.host
            port: #@ data.values.tap.credentials.backstage.database.port
            user: #@ data.values.tap.credentials.backstage.database.username
            password: #@ data.values.tap.credentials.backstage.database.password
            ssl: {rejectUnauthorized: true}
      #@ end
    #@ if "github" in data.values.tap.credentials and "clientId" in data.values.tap.credentials.github and "clientSecret" in data.values.tap.credentials.github:
    auth:
      environment: development
      providers:
        github:
          development:
            clientId: #@ data.values.tap.credentials.github.clientId
            clientSecret: #@ data.values.tap.credentials.github.clientSecret
    #@ end
    kubernetes:
      serviceLocatorMethod:
        type: 'multiTenant'
      clusterLocatorMethods:
        - type: 'config'
          clusters:
            - url: https://tap-sunkarasr-demo-85fe4c-d633a19f.hcp.eastus.azmk8s.io:443
              name: tap-run
              authProvider: serviceAccount
              serviceAccountToken: "eyJhbGciOiJSUzI1NiIsImtpZCI6IlFvdWYtalJ4WlRWcmNHNUtpaEZSczhDWWlQclFrdlhrckp1Wkgxd3RzNlEifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJ0YXAtZ3VpIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6InRhcC1ndWktdmlld2VyLXRva2VuLXNqZ2doIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6InRhcC1ndWktdmlld2VyIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiNTE1YjQ0ZDctZjhhZS00M2NjLWJhN2MtZTRkNWQyNDJiMWFlIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50OnRhcC1ndWk6dGFwLWd1aS12aWV3ZXIifQ.oVSmhXXJyE1UT8wpHyrrq-nOpjGsE9d8oi9WUjhMr4zDa7XxjJr6DX85aKlpsjqHjtQwmBihpn1BCSKdCupT0D8ws9c9oK3hbzy6baoMlV_lSuRtOX_DHIqL2nAMRAabzxg4BxsEU6-7bF52lcye7dr3eKeAhyxClj283cjr92tUONMp2mRjc__n-yM9IR1NZc6fwhNdyDKGQlaxHrKzn-hGS8gunmqq9syqD-gtoCObOm2VrFfR69Ak8f5HTgma8KVH5YkjQRw8VHRaJz1t-x1zexWTd0bbX2iB0eWAJCfkwQJzgGMa0oksOZajMYWrgA1IvOt6xy4UtrH3mZVodeBn2quF2dyQWNBnuHX_DjMkWVsII7d5Rnr3oHvRN5gcplbDOTdGZAPWWBL_9_nz15iSLKmtXQsn39Py4-vn-4w_ZXTGDPfrb-c441GnaSUd8k23njzuhpF1hnykCYUFolyjCi1nqy22acelb7yJgS9tbif9OTfs4BUhtzRPPVRLTB0aCDGbNl0QUvJIn3Eudm8AFUe-8Tgh7clRui4eLz0rC2zwuaCzB7LV3r0lAO3334kEADu7DwtsO950PCi7pZNuPuHLJsKUVLEGJtZytGs2XJbDq5XTBEos_y3-JUPULx2U3ZPvj5RKP3AUwRAbJIeyhYGAJsIcXYocALjpUP8"
              skipTLSVerify: true
            - url: https://tap-build-sunkarasr-demo-85fe4c-26a241af.hcp.eastus.azmk8s.io:443
              name: tap-build
              authProvider: serviceAccount
              serviceAccountToken: "eyJhbGciOiJSUzI1NiIsImtpZCI6ImlXZWpSY0VqWDREbzJmR0dScnc5dzFaVnZIZE13NEVkY0RJNDlwU0lkTDAifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJ0YXAtZ3VpIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6InRhcC1ndWktdmlld2VyLXRva2VuLWhyeGN4Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6InRhcC1ndWktdmlld2VyIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiYWU0MzEyYWYtNDlmNy00MGM3LTk0MmMtMzQ3MjBmOWFiMTNkIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50OnRhcC1ndWk6dGFwLWd1aS12aWV3ZXIifQ.TeHjCE41Na6BGDr1JRLMTFjCknpdHlM4jnr5VXTpvKsWUBM5QVGzjmyLowr5OwPpXT4XSn9TlyyiapRpOd1nR4WDQB3JPaejZOp5kHNX_9v_O0aKWDCW0QELcVotUthQVrzARxxFKNsfKXptgukzhhKj0sS5oizc43rp20LWiKcyfwH0di3mbmORI3mVuzoKTROLBEsOHXvISOsFYrYcnCjdKKLznKAUH3uYpaNSwvt-JhIqV3Pbl1kS4bilb8OgGkbhARoRn0istwPSb4H5HcDLcmVSi05Efw5swmi1_49eT6Ja-HLSJ26gvKwTGVDtCyuN2IxGM1ZEk9-GH1zg_GQDJKTLGMlCPjOf7POdIEQKoR2HeBelkHf_E8W1_mMDJOqeSRTdbGs77wwo91uiQ-1ZA6MlDMVtMz1s9WI1jVacOgS_Xj_tspgpigFFLlfpGSxy66-eRzXsaLqZKHsBGN7kV0K6zFdJuNh2HfCipNm87_AwJM616k6MaVigARy2n972riabvH9nvUihTrFtLgbLIgalfzY2ftUBipHvnVQBvvKStlWELOQwidiJRY4W3b0Bd5O7S2rnswcTNzIeDm_Z9X275DZGd3p2ajIndKMD6vyB36J928_KPa_eqUFsa4GkH6Rc-Yei8IjZdzfMEwkakgllHadYLYJPzLP9V_s"
              skipTLSVerify: true
metadata_store:
  app_service_type: LoadBalancer
 
grype:
  namespace: #@ data.values.tap.devNamespace
  targetImagePullSecret: "tap-registry"

contour:
  envoy:
    service:
      type: LoadBalancer

cnrs:
  domain_name: #@ data.values.tap.domains.knative
  default_tls_secret: tanzu-system-ingress/tls
  domain_template: "{{.Name}}-{{.Namespace}}.{{.Domain}}"

appliveview:
  ingressDomain: #@ data.values.tap.domains.main
  ingressEnabled: true
  tls:
    namespace: tanzu-system-ingress
    secretName: tls
#@ end
---
apiVersion: v1
kind: Secret
metadata:
  name: tap-values
  namespace: #@ data.values.tap.namespace
type: Opaque
stringData:
  values.yml: #@ yaml.encode(config())
---
apiVersion: packaging.carvel.dev/v1alpha1
kind: PackageInstall
metadata:
  name: tap
  namespace: #@ data.values.tap.namespace
  annotations:
    kapp.k14s.io/change-group: tap
    kapp.k14s.io/change-rule: "upsert after upserting tap-install/rbac"
    kapp.k14s.io/change-rule.repo: "upsert after upserting tap-install/tap-repo"
    ext.packaging.carvel.dev/ytt-paths-from-secret-name.0: "custom-labels"
spec:
  packageRef:
    refName: tap.tanzu.vmware.com
    versionSelection:
      constraints: #@ str(data.values.tap.version)
      prereleases: {}
  serviceAccountName: tap-default-sa
  values:
  - secretRef:
      name: tap-values
---
apiVersion: v1
kind: Secret
metadata:
  name: custom-labels
  namespace: #@ data.values.tap.namespace
stringData:
  add-custom-labels.yml: |
    #@ load("@ytt:overlay", "overlay")
    
    #@overlay/match by=overlay.subset({"kind":"PackageInstall"}),expects="1+"
    ---
    metadata:
      #@overlay/match missing_ok=True
      annotations:
        #@overlay/match missing_ok=True
        ext.packaging.carvel.dev/ytt-paths-from-secret-name.0: my-custom-labels
    
    ---
    apiVersion: v1
    kind: Secret
    metadata:
      name: my-custom-labels
    stringData:
      add-my-custom-labels.yml: |
        #@ load("@ytt:overlay", "overlay")
    
        #@overlay/match by=overlay.subset({"kind": "Namespace"}),expects="0+"
        ---
        metadata:
          #@overlay/match missing_ok=True
          labels:
            #@overlay/match missing_ok=True
            istio-injection: "false"
            #@overlay/match missing_ok=True
            tmc-policy: "false"
